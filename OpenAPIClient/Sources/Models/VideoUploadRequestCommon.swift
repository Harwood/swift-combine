//
// VideoUploadRequestCommon.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct VideoUploadRequestCommon: Codable {
    /// Video name
    public var name: String
    /// Channel id that will contain this video
    public var channelId: Int
    public var privacy: VideoPrivacySet?
    /// category id of the video (see [/videos/categories](#operation/getCategories))
    public var category: Int?
    /// licence id of the video (see [/videos/licences](#operation/getLicences))
    public var licence: Int?
    /// language id of the video (see [/videos/languages](#operation/getLanguages))
    public var language: String?
    /// Video description
    public var description: String?
    /// Whether or not we wait transcoding before publish the video
    public var waitTranscoding: Bool?
    /// A text tell the audience how to support the video creator
    public var support: String?
    /// Whether or not this video contains sensitive content
    public var nsfw: Bool?
    /// Video tags (maximum 5 tags each between 2 and 30 characters)
    public var tags: [String]?
    /// Enable or disable comments for this video
    public var commentsEnabled: Bool?
    /// Enable or disable downloading for this video
    public var downloadEnabled: Bool?
    /// Date when the content was originally published
    public var originallyPublishedAt: Date?
    public var scheduleUpdate: VideoScheduledUpdate?
    /// Video thumbnail file
    public var thumbnailfile: Data?
    /// Video preview file
    public var previewfile: Data?
    public var videoPasswords: [String]?

    public init(name: String, channelId: Int, privacy: VideoPrivacySet? = nil, category: Int? = nil, licence: Int? = nil, language: String? = nil, description: String? = nil, waitTranscoding: Bool? = nil, support: String? = nil, nsfw: Bool? = nil, tags: [String]? = nil, commentsEnabled: Bool? = nil, downloadEnabled: Bool? = nil, originallyPublishedAt: Date? = nil, scheduleUpdate: VideoScheduledUpdate? = nil, thumbnailfile: Data? = nil, previewfile: Data? = nil, videoPasswords: [String]? = nil) {
        self.name = name
        self.channelId = channelId
        self.privacy = privacy
        self.category = category
        self.licence = licence
        self.language = language
        self.description = description
        self.waitTranscoding = waitTranscoding
        self.support = support
        self.nsfw = nsfw
        self.tags = tags
        self.commentsEnabled = commentsEnabled
        self.downloadEnabled = downloadEnabled
        self.originallyPublishedAt = originallyPublishedAt
        self.scheduleUpdate = scheduleUpdate
        self.thumbnailfile = thumbnailfile
        self.previewfile = previewfile
        self.videoPasswords = videoPasswords
    }
}
