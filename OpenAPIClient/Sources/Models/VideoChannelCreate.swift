//
// VideoChannelCreate.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct VideoChannelCreate: Codable {
    /// Channel display name
    public var displayName: [String: Any]
    /// Channel description
    public var description: [String: Any]?
    /// How to support/fund the channel
    public var support: [String: Any]?
    public var name: Any

    public init(displayName: [String: Any], description: [String: Any]? = nil, support: [String: Any]? = nil, name: Any) {
        self.displayName = displayName
        self.description = description
        self.support = support
        self.name = name
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case displayName
        case description
        case support
        case name
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        displayName = try container.decode([String: Any].self, forKey: .displayName)
        description = try container.decodeIfPresent([String: Any].self, forKey: .description)
        support = try container.decodeIfPresent([String: Any].self, forKey: .support)
        name = try container.decode(Any.self, forKey: .name)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(try JSONSerialization.data(withJSONObject: displayName), forKey: .displayName)
        if let description = description {
            try container.encodeIfPresent(try JSONSerialization.data(withJSONObject: description), forKey: .description)
        }
        if let support = support {
            try container.encodeIfPresent(try JSONSerialization.data(withJSONObject: support), forKey: .support)
        }
        try container.encode(try JSONSerialization.data(withJSONObject: name), forKey: .name)
    }
}
