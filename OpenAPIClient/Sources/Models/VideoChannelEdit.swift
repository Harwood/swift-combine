//
// VideoChannelEdit.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct VideoChannelEdit: Codable {
    /// Channel display name
    public var displayName: Any?
    /// Channel description
    public var description: Any?
    /// How to support/fund the channel
    public var support: Any?

    public init(displayName: Any? = nil, description: Any? = nil, support: Any? = nil) {
        self.displayName = displayName
        self.description = description
        self.support = support
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case displayName
        case description
        case support
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        displayName = try container.decodeIfPresent(Any.self, forKey: .displayName)
        description = try container.decodeIfPresent(Any.self, forKey: .description)
        support = try container.decodeIfPresent(Any.self, forKey: .support)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let displayName = displayName {
            try container.encodeIfPresent(try JSONSerialization.data(withJSONObject: displayName), forKey: .displayName)
        }
        if let description = description {
            try container.encodeIfPresent(try JSONSerialization.data(withJSONObject: description), forKey: .description)
        }
        if let support = support {
            try container.encodeIfPresent(try JSONSerialization.data(withJSONObject: support), forKey: .support)
        }
    }
}
